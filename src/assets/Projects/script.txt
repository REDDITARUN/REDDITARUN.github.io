### Project: F.E.A.S.T - Food & Ingredient AI Suggestion Technology
**What It Does**: Assists in meal planning by analyzing images of ingredients and generating personalized recipes using deep learning.
**Why We Need It**: Reduces food waste, optimizes meal planning, and enhances cooking experiences.
**Skills/Tech Used**:
- **Object Detection**: Trained YOLO models for ingredient identification.
- **Text Generation**: Used ChefTransformerT5 for generating recipes.
- **Data Preprocessing**: Applied data cleaning, augmentation, and tokenization.

### Project: RxRovers: Roaming for Rapid Relief
**What It Does**: Optimizes medical supply delivery in hospitals using reinforcement learning (RL).
**Why We Need It**: Enhances patient care by ensuring timely delivery of medical supplies.
**Skills/Tech Used**:
- **Reinforcement Learning**: Implemented Q-learning and Double Q-learning.
- **Simulation**: Created dynamic hospital environments with obstacles.
- **Path Optimization**: Developed strategies for efficient navigation.

### Project: Deep Learning Architectures
**What It Does**: Implements CNNs, RNNs, LSTMs, Autoencoders, and Transformers for various tasks.
**Why We Need It**: Each architecture solves different complex data problems effectively.
**Skills/Tech Used**:
- **CNNs**: VGG13 for image classification.
- **RNNs/LSTMs**: Time-series forecasting with hyperparameter tuning.
- **Autoencoders**: Anomaly detection in manufacturing data.
- **Transformers**: Text classification using self-attention mechanisms.

### Project: Defining and Solving Reinforcement Learning Environments
**What It Does**: Solves RL environments like Frozen Lake, Lawn Mower, Squirrel Maze, and stock trading.
**Why We Need It**: Demonstrates versatility of RL in solving various deterministic and stochastic problems.
**Skills/Tech Used**:
- **Algorithms**: Q-learning, Double Q-learning, SARSA.
- **Environment Design**: Created custom environments for RL training.
- **Data Visualization**: Used matplotlib for visualizing results and performance.

### Project: Crimson Eye: Data-Driven Approach to Crime Analysis
**What It Does**: Enhances predictive policing by analyzing crime data from Los Angeles.
**Why We Need It**: Optimizes law enforcement resource allocation and improves public safety.
**Skills/Tech Used**:
- **Data Analysis**: Cleaned and processed large crime datasets.
- **Machine Learning**: Implemented models like Linear Regression, Logistic Regression, Naive Bayes, KNN, Decision Trees, and XGBoost.
- **Visualization**: Created visualizations to identify crime trends and model performance.

Project: DeepRL
Overview: Implemented Deep Reinforcement Learning (RL) algorithms including Deep Q-Networks (DQN) and its improved variants.
What It Does: Solves various environments from simple grid worlds to complex tasks like balancing a pole and navigating a car.
Why We Need It: Provides hands-on experience with RL techniques applicable in robotics, game playing, and autonomous driving.
Skills/Tech Used:
DQN and DDQN: Implemented for environments like Grid World, CartPole, and Mountain Car.
Experience Replay: Used to store and sample experiences.
Target Networks: Stabilized training.
Actor-Critic (A2C): Applied in continuous action spaces for tasks like Bipedal Walker.
OpenAI Gym: Utilized various environments to test RL algorithms.


Project: Pintos-Projects
Overview: Implemented two projects for the Pintos operating system: Threads and User Programs.
What It Does: Simulates essential OS components like threading, synchronization, scheduling, and system calls.
Why We Need It: Provides practical understanding of modern OS concepts.
Skills/Tech Used:
Thread Management: Enhanced thread scheduler and implemented an alarm clock.
Scheduling: Various algorithms for efficient CPU utilization.
Synchronization: Locks, semaphores, and condition variables.
System Calls: Argument passing and user program interactions with the kernel.


Project: Support Assistant Using DialogFlow and Flutter
Overview: Developed a chatbot to act as a support assistant using DialogFlow and Flutter.
What It Does: Simulates human conversation and provides intelligent replies to user queries.
Why We Need It: Enhances user support experience in applications.
Skills/Tech Used:

DialogFlow Integration: Enables intelligent conversation handling.
Flutter: For building the chat interface.
Parsed Text Package: Differentiates links and URLs in replies.



Project: Music Genre Classification
Overview: Explored various Neural Networks and Deep Learning paradigms for classifying music genres.
What It Does: Classifies music genres with high accuracy using ANN, CNN, and transfer learning.
Why We Need It: Improves music recommendation systems for platforms like Apple Music and Spotify.
Skills/Tech Used:
ANN: Sequential models with Dense and Dropout layers.
CNN: VGG19 and other architectures for image-based genre classification.
Transfer Learning: Pre-trained models like EfficientNetB0 and MobileNetV2 for enhanced performance.


### GearShift-DB: Master of Formula 1 Data Management
**What It Does**: Comprehensive database system for Formula 1 data management.
**Why We Need It**: Enhances efficiency, collaboration, and decision-making across teams.
**Skills/Tech Used**:
- **Database Design**: Centralized system integrating race results, driver standings, lap times.
- **User Interface**: Intuitive design for easy data entry, retrieval, and analysis.
- **Data Validation**: Ensures accuracy and reliability.
- **Analytics and Reporting**: Advanced features to uncover insights and trends.
- **Collaboration Tools**: Secure access from multiple locations for team members and stakeholders.

### AgriTractor-Manager: Farmer Tractor Management System
**What It Does**: Manages farmer tractor data using a web application.
**Why We Need It**: Streamlines tractor management, enhances data organization, and improves decision-making for farmers.
**Skills/Tech Used**:
- **Django 4**: Backend framework for robust application development.
- **HTML5, CSS3, Bootstrap 5**: For responsive and user-friendly interface design.

### Intune PCI Compliance and Privileged Identity Management
**What It Does**: Implements data loss prevention and privileged identity management with PCI DSS compliance.
**Why We Need It**: Protects against data breaches, ensures compliance, and secures sensitive information.
**Skills/Tech Used**:
- **Microsoft Intune**: Device management and security.
- **Multi-Factor Authentication (MFA)**: Secures access to privileged accounts.
- **Role-Based Access Control (RBAC)**: Manages access permissions.
- **Compliance Policies**: Ensures adherence to security standards.

### CrowdSec Deployment Guide: Enhancing Cybersecurity
**What It Does**: Provides deployment steps for CrowdSec, a collaborative intrusion prevention system.
**Why We Need It**: Detects and responds to sophisticated attacks, shares threat intelligence, and enhances collective security.
**Skills/Tech Used**:
- **Behavioral Analysis**: Detects suspicious activities.
- **Community-Driven**: Shares threat signals across the community.
- **Real-Time Protection**: Blocks malicious IP addresses using bouncers.

### Online Book Store
**What It Does**: Cloud-based platform for university-related resources, periodicals, etc.
**Why We Need It**: Enhances user experience and overcomes FTP configuration issues.
**Skills/Tech Used**:
- **Amazon AWS**: Cloud computing platform.
- **GraphQL API**: For efficient data querying.
- **Stripe Platform**: Handles payment processing.
- **ReactJS**: Frontend framework for dynamic user interface.
- **Amazon DynamoDB**: NoSQL database for data storage.

### Support Assistance Chatbot using Flutter and DialogFlow
**What It Does**: Intelligent chatbot simulating human behavior for support assistance.
**Why We Need It**: Provides effective user support through conversational AI.
**Skills/Tech Used**:
- **Flutter**: Framework for building the chat interface.
- **DialogFlow**: Natural language understanding for intelligent responses.
- **Dart, Java, Shell**: Programming languages for backend integration.





UPDATED

### Project: RxRovers: Roaming for Rapid Relief
**What It Does**: Optimizes medical supply delivery in hospitals using RL.
**Why We Need It**: Ensures timely delivery of medical supplies, enhancing patient care.
**Skills/Tech Used**:
- **Reinforcement Learning**: Q-learning, Double Q-learning.
- **Simulation**: Dynamic hospital environments with obstacles.
- **Path Optimization**: Efficient navigation strategies.

### Project: Deep Learning Architectures
**What It Does**: Implements CNNs, RNNs, LSTMs, Autoencoders, and Transformers for various tasks.
**Why We Need It**: Solves complex data problems effectively.
**Skills/Tech Used**:
- **CNNs**: VGG13 for image classification.
- **RNNs/LSTMs**: Time-series forecasting.
- **Autoencoders**: Anomaly detection.
- **Transformers**: Text classification.

### Project: Solving Reinforcement Learning Environments
**What It Does**: Solves RL environments like Frozen Lake, Lawn Mower, Squirrel Maze, and stock trading.
**Why We Need It**: Demonstrates RL's versatility.
**Skills/Tech Used**:
- **Algorithms**: Q-learning, Double Q-learning, SARSA.
- **Environment Design**: Custom RL environments.
- **Data Visualization**: Matplotlib.

### Project: Crimson Eye: Data-Driven Crime Analysis
**What It Does**: Enhances predictive policing by analyzing crime data.
**Why We Need It**: Optimizes law enforcement resource allocation.
**Skills/Tech Used**:
- **Data Analysis**: Cleaned and processed datasets.
- **Machine Learning**: Linear Regression, Logistic Regression, Naive Bayes, KNN, Decision Trees, XGBoost.
- **Visualization**: Crime trends and model performance.

### Project: DeepRL
**What It Does**: Implements Deep Reinforcement Learning algorithms.
**Why We Need It**: Hands-on experience with RL techniques.
**Skills/Tech Used**:
- **DQN, DDQN**: Grid World, CartPole, Mountain Car.
- **Experience Replay**: Experience storage and sampling.
- **Target Networks**: Training stabilization.
- **Actor-Critic (A2C)**: Continuous action spaces.

### Project: Pintos-Projects
**What It Does**: Simulates essential OS components like threading, synchronization, scheduling, and system calls.
**Why We Need It**: Provides understanding of modern OS concepts.
**Skills/Tech Used**:
- **Thread Management**: Enhanced scheduler, alarm clock.
- **Scheduling**: Efficient algorithms.
- **Synchronization**: Locks, semaphores, condition variables.
- **System Calls**: Argument passing, kernel interaction.

### Project: Support Assistant Using DialogFlow and Flutter
**What It Does**: Chatbot for support using DialogFlow and Flutter.
**Why We Need It**: Enhances user support experience.
**Skills/Tech Used**:
- **DialogFlow Integration**: Intelligent conversation handling.
- **Flutter**: Chat interface.
- **Parsed Text Package**: Link differentiation.

### Project: Music Genre Classification
**What It Does**: Classifies music genres using ANN, CNN, and transfer learning.
**Why We Need It**: Improves music recommendation systems.
**Skills/Tech Used**:
- **ANN**: Dense and Dropout layers.
- **CNN**: VGG19 for image-based classification.
- **Transfer Learning**: EfficientNetB0, MobileNetV2.

### Project: GearShift-DB: Master of Formula 1 Data Management
**What It Does**: Database system for Formula 1 data management.
**Why We Need It**: Enhances efficiency and decision-making.
**Skills/Tech Used**:
- **Database Design**: Centralized race results, driver standings.
- **User Interface**: Easy data entry, retrieval.
- **Data Validation**: Ensures accuracy.
- **Analytics**: Insights and trends.
- **Collaboration Tools**: Secure access.

### Project: AgriTractor-Manager: Farmer Tractor Management System
**What It Does**: Manages farmer tractor data.
**Why We Need It**: Streamlines tractor management.
**Skills/Tech Used**:
- **Django 4**: Robust backend.
- **HTML5, CSS3, Bootstrap 5**: Responsive design.

### Project: Intune PCI Compliance and Privileged Identity Management
**What It Does**: Implements data loss prevention and privileged identity management.
**Why We Need It**: Ensures compliance and security.
**Skills/Tech Used**:
- **Microsoft Intune**: Device management.
- **MFA**: Secure access.
- **RBAC**: Access permissions.
- **Compliance Policies**: Security standards.

### Project: CrowdSec Deployment Guide: Enhancing Cybersecurity
**What It Does**: Deployment steps for CrowdSec, an intrusion prevention system.
**Why We Need It**: Enhances collective security.
**Skills/Tech Used**:
- **Behavioral Analysis**: Detects suspicious activities.
- **Community-Driven**: Shares threat signals.
- **Real-Time Protection**: Blocks malicious IPs.

### Project: Online Book Store
**What It Does**: Cloud-based platform for university resources.
**Why We Need It**: Enhances user experience.
**Skills/Tech Used**:
- **Amazon AWS**: Cloud computing.
- **GraphQL API**: Efficient querying.
- **Stripe Platform**: Payment processing.
- **ReactJS**: Dynamic interface.
- **Amazon DynamoDB**: Data storage.

### Project: Support Assistance Chatbot using Flutter and DialogFlow
**What It Does**: Chatbot for support using Flutter and DialogFlow.
**Why We Need It**: Effective user support.
**Skills/Tech Used**:
- **Flutter**: Chat interface.
- **DialogFlow**: Intelligent responses.
- **Dart, Java, Shell**: Backend integration.

